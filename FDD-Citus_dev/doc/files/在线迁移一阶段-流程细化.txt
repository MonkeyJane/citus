1. 处理新增任务
PG服务端进程：
（1）入参校验
（2）防重入校验：新增任务是否已存在自定义表中（分片/亲和分片）。若是，则文字提示，直接退出
（3）将新增任务信息写入自定义表中
（4）注册启动预处理进程

预处理进程：
（1）由PG机制启动
（2）对共享内存加写锁1（分片信息锁）
（3）遍历共享内存分片数组，查找可用空间。若暂无可用，则文字提示，直接退出
（4）将需要处理的分片信息，写到共享内存中
（5）从共享内存中，读取调度进程pid
（6）若调度进程pid为0：
    （6.1）对共享内存加写锁2（预处理进程信息锁）
	（6.2）从共享内存中，读取预处理进程pid
	（6.3）若预处理进程pid非0，则从共享内存中，读取调度进程pid。释放共享内存写锁1（分片信息锁），跳到步骤6.8
    （6.3）注册启动调度进程
	（6.4）将自身（预处理进程）pid，写到共享内存中
    （6.5）释放共享内存写锁1（分片信息锁）
	（6.6）进程挂起。等待调度进程的信号1（进程启动）
       调度进程初始化：
        （1）由PG机制启动，创建缓存
        （2）对共享内存加写锁3（调度进程信息锁）
		（3）将自身（调度进程）pid，写到共享内存中
	    （4）释放共享内存写锁3（调度进程信息锁）
	    （5）从共享内存中，读取等待的预处理进程pid。发送信号1（进程启动），唤醒该进程
		（6）进程挂起。等待预处理进程的信号2（新增任务）
    （6.7）收到调度进程的信号1（进程启动）
	（6.8）从共享内存中，读取调度进程pid。若调度进程pid为0，则直接报错退出
	（6.9）释放共享内存写锁2（预处理进程信息锁）
（7）若调度进程pid非0：释放共享内存写锁1（分片信息锁）
（8）发送信号2（新增任务），唤醒调度进程

调度进程：
（1）收到预处理进程的信号2（新增任务）
（2）对共享内存加写锁1（分片信息锁）
（3）遍历共享内存中的迁移分片数组，找出符合条件的待处理的分片
（4）在自定义表中查询待处理分片数据，为相应缓存赋值
（5）修改共享内存中上述分片的状态
（6）释放共享内存写锁1（分片信息锁）
（7）进程挂起。等待预处理进程的信号2（新增任务）；或者定时器周期信号3（监控轮询）

6. 处理路由切换
前提：分片已满足路由切换条件
（1）源端、目的端分片数据校验通过
（2）已对源端元数据上锁
处理步骤：
（1）更新 DistShardCacheHash 中的 ShardCacheEntry.DistTableCacheEntry.GroupShardPlacement 的所属节点 groupId
（2）更新 pg_dist_placement 中数据的 groupId

7. 迁移后清理
（1）若 drop_method 要求删除源分片数据，则发送删除分片的SQL命令到源节点，执行删除动作